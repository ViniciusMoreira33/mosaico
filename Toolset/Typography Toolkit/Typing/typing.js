function makeCursorStyle(t,e){const n=e.split(","),a=n[0],i=n[1],r=n[2],d=n[3],s="typedCursor-"+t.dataset.identifier.replace(/\s+/g,"-").toLowerCase(),o=document.createElement("style");return o.innerHTML=`\n    @media (min-width: 992px) {\n      .${s} { font-size: ${a}; vertical-align: top; }\n    }\n    @media (max-width: 991px) {\n      .${s} { font-size: ${i}; vertical-align: top; }\n    }\n    @media (max-width: 767px) {\n      .${s} { font-size: ${r}; vertical-align: top; }\n    }\n    @media (max-width: 478px) {\n      .${s} { font-size: ${d}; vertical-align: top; }\n    }\n  `,document.head.appendChild(o),s}function getTypingSentences(t){let e=[],n=1;for(;t.hasAttribute(`data-typing-sentence${n}`);)e.push(t.getAttribute(`data-typing-sentence${n}`)),n++;return e}document.addEventListener("DOMContentLoaded",function(){const t=document.createElement("script");t.src="https://unpkg.com/typed.js@2.0.16/dist/typed.umd.js",t.onload=function(){document.querySelectorAll('[data-identifier="typing"]').forEach(t=>{const e=parseFloat(t.getAttribute("data-typing-speed")),n=makeCursorStyle(t,t.getAttribute("data-typing-cursor-size")),a="true"===t.getAttribute("data-typing-loop"),i=t.getAttribute("data-typing-type"),r=getTypingSentences(t);new Typed(t,{strings:r,typeSpeed:e,cursorChar:`<span class="${n}">|</span>`,loop:a,smartBackspace:"smart"===i})})},document.head.appendChild(t)});
